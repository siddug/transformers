# Docker Compose configuration for Chain Reaction API

services:
  fastapi:
    build: .
    container_name: chain-reaction-api
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/chain_reaction
      - REDIS_URL=redis://redis:6379
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_SECURE=false
    depends_on:
      - postgres
      - redis
      - qdrant
    volumes:
      - ./:/app
    command: uvicorn server:app --host 0.0.0.0 --port 8000 --reload

  postgres:
    image: postgres:16-alpine
    container_name: chain-reaction-postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=chain_reaction
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: chain-reaction-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  qdrant:
    image: qdrant/qdrant:latest
    container_name: chain-reaction-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage

  worker:
    build: .
    container_name: chain-reaction-worker
    command: python worker.py
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/chain_reaction
      - REDIS_URL=redis://redis:6379
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_SECURE=false
    depends_on:
      - postgres
      - redis
      - qdrant
    volumes:
      - ./:/app

  minio:
    image: minio/minio:latest
    container_name: chain-reaction-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  nextjs:
    build: 
      context: ../chain-reaction-ui
      dockerfile: Dockerfile.dev
    container_name: chain-reaction-ui
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    depends_on:
      - fastapi
    volumes:
      - ../chain-reaction-ui:/app
      - /app/node_modules
    command: npm run dev

  rq-dashboard:
    image: eoranged/rq-dashboard
    container_name: chain-reaction-rq-dashboard
    ports:
      - "9181:9181"
    environment:
      - RQ_DASHBOARD_REDIS_URL=redis://redis:6379
      - RQ_DASHBOARD_QUEUES=default,github
    depends_on:
      - redis

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: chain-reaction-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@chain-reaction.com
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    ports:
      - "5050:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin-servers.json:/pgadmin4/servers.json:ro
    entrypoint: >
      /bin/sh -c "
      mkdir -p /var/lib/pgadmin/storage/admin_chain-reaction.com;
      echo 'postgres:5432:*:postgres:postgres' > /var/lib/pgadmin/storage/admin_chain-reaction.com/pgpassfile;
      chmod 600 /var/lib/pgadmin/storage/admin_chain-reaction.com/pgpassfile;
      chown -R 5050:5050 /var/lib/pgadmin/storage;
      /entrypoint.sh
      "

volumes:
  postgres_data:
  redis_data:
  qdrant_data:
  minio_data:
  pgadmin_data: